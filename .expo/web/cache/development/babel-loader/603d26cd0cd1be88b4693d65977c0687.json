{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\80E502UKIN\\\\Desktop\\\\mcc\\\\new-on\\\\src\\\\components\\\\Dietplantracker.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Button, TextInput, Text, DataTable } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from \"axios\";\nimport Dietrow from \"./Dietrow\";\nimport Constants from 'expo-constants';\nimport * as Location from 'expo-location';\n\nvar getdietplantracker = function getdietplantracker(diet) {\n  var options, res, dat;\n  return _regeneratorRuntime.async(function getdietplantracker$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = {\n            method: 'GET',\n            url: 'https://food-calorie-data-search.p.rapidapi.com/api/search',\n            params: {\n              keyword: diet\n            },\n            headers: {\n              'x-rapidapi-host': 'food-calorie-data-search.p.rapidapi.com',\n              'x-rapidapi-key': '24b0b85f90msh137a06c9574e033p1fd6b0jsnff8deec726dc'\n            }\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.request(options));\n\n        case 3:\n          res = _context.sent;\n          dat = _objectSpread({\n            name: diet\n          }, res.data[0]);\n          console.log(dat);\n          return _context.abrupt(\"return\", dat);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar dietplantracker = function dietplantracker() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var cpy = _objectSpread({}, data);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      errorMsg = _React$useState2[0],\n      setErrorMsg = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      location = _React$useState4[0],\n      setLocation = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      CheckText = _React$useState6[0],\n      setCheckText = _React$useState6[1];\n\n  React.useEffect(function () {\n    setCurrentLocation();\n  }, []);\n\n  var setCurrentLocation = function setCurrentLocation() {\n    var _await$Location$reque, status, location;\n\n    return _regeneratorRuntime.async(function setCurrentLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 2:\n            _await$Location$reque = _context2.sent;\n            status = _await$Location$reque.status;\n\n            if (!(status !== 'granted')) {\n              _context2.next = 7;\n              break;\n            }\n\n            setErrorMsg('Permission to access location was denied');\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n          case 9:\n            location = _context2.sent;\n            setLocation(location);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onSubmit = function onSubmit() {\n    var dta;\n    return _regeneratorRuntime.async(function onSubmit$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getdietplantracker(text));\n\n          case 2:\n            dta = _context3.sent;\n            setData([].concat(_toConsumableArray(data), [dta]));\n            console.log(data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    label: \"Diet\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    value: text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    onPress: onSubmit,\n    mode: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"ADD\"))), React.createElement(DataTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Name\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"water\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"energy_kcal\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"TOTAL\")), data.map(function (e, index) {\n    return React.createElement(Dietrow, {\n      diet: e,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 30\n      }\n    });\n  })), location ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, \"latitude = \", location.coords.latitude) : null, location ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, \"longitude = \", location.coords.longitude) : null);\n};\n\nexport default dietplantracker;","map":{"version":3,"sources":["C:/Users/80E502UKIN/Desktop/mcc/new-on/src/components/Dietplantracker.jsx"],"names":["React","useState","Button","TextInput","Text","DataTable","axios","Dietrow","Constants","Location","getdietplantracker","diet","options","method","url","params","keyword","headers","request","res","dat","name","data","console","log","dietplantracker","setData","text","setText","cpy","errorMsg","setErrorMsg","location","setLocation","CheckText","setCheckText","useEffect","setCurrentLocation","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","onSubmit","dta","padding","map","e","index","coords","latitude","longitude"],"mappings":"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","sourcesContent":["import  React,{useState} from 'react';\r\nimport {Button,TextInput,Text, DataTable } from 'react-native-paper';\r\nimport {View} from 'react-native';\r\nimport axios from \"axios\";\r\nimport Dietrow from './Dietrow';\r\n\r\n\r\nimport Constants from 'expo-constants';\r\nimport * as Location from 'expo-location';\r\n\r\nconst getdietplantracker = async (diet) => {\r\n\r\n  \r\nconst options = {\r\n  method: 'GET',\r\n  url: 'https://food-calorie-data-search.p.rapidapi.com/api/search',\r\n  params: {keyword: diet},\r\n  headers: {\r\n    'x-rapidapi-host': 'food-calorie-data-search.p.rapidapi.com',\r\n    'x-rapidapi-key': '24b0b85f90msh137a06c9574e033p1fd6b0jsnff8deec726dc'\r\n  }\r\n};\r\n\r\n    const res = await axios.request(options);\r\n    const dat = {name:diet,...res.data[0]}\r\n    console.log(dat)\r\n    return dat\r\n}\r\n\r\n\r\n\r\nconst dietplantracker =   () => {\r\n    const [data,setData] = useState([])\r\n\r\n    const [text,setText] = useState(\"\")\r\n    const cpy = {...data}\r\n    const [errorMsg, setErrorMsg] = React.useState('');\r\n    const [location, setLocation] = React.useState(null);\r\n    const [CheckText, setCheckText] = React.useState('');\r\n    \r\n    React.useEffect(() => {\r\n      setCurrentLocation();\r\n    }, []);\r\n\r\n    const setCurrentLocation = async () => {\r\n      let { status } = await Location.requestForegroundPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        setErrorMsg('Permission to access location was denied');\r\n        return;\r\n      }\r\n      let location = await Location.getCurrentPositionAsync({});\r\n      setLocation(location);\r\n    };\r\n\r\n    const onSubmit = async () => {\r\n      const dta = await getdietplantracker(text)\r\n      setData([...data,dta])\r\n      console.log(data)\r\n  }\r\n\r\n\r\n\r\n\r\n  return (<View>\r\n    <View style={{padding: 10}}>\r\n    <TextInput\r\n      label = \"Diet\"\r\n      onChangeText={text => setText(text)}\r\n      value={text}\r\n    />\r\n    <Button onPress={onSubmit} mode=\"contained\">\r\n        <Text>ADD</Text>\r\n    </Button>\r\n  </View>\r\n    <DataTable>\r\n      <DataTable.Header>\r\n      <DataTable.Title >Name</DataTable.Title>\r\n        <DataTable.Title numeric>water</DataTable.Title>\r\n        <DataTable.Title numeric>energy_kcal</DataTable.Title>\r\n        <DataTable.Title numeric>TOTAL</DataTable.Title>\r\n                    \r\n      </DataTable.Header>\r\n     \r\n      {data.map((e,index) => <Dietrow diet={e} key={index}/>)}\r\n      \r\n      </DataTable>\r\n      {location ? <Text>latitude = {location.coords.latitude}</Text> : null}\r\n      {location ? <Text>longitude = {location.coords.longitude}</Text> : null}\r\n      </View>\r\n  );\r\n}\r\n \r\nexport default dietplantracker;"]},"metadata":{},"sourceType":"module"}