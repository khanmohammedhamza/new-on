{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\80E502UKIN\\\\Desktop\\\\new one\\\\diettracker\\\\src\\\\components\\\\Dietplantracker.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport { Button, TextInput, Text, DataTable } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from \"axios\";\nimport Dietrow from \"./Dietrow\";\n\nvar getdietplantracker = function getdietplantracker(diet) {\n  var options, res, dat;\n  return _regeneratorRuntime.async(function getdietplantracker$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = {\n            method: 'GET',\n            url: 'https://food-calorie-data-search.p.rapidapi.com/api/search',\n            params: {\n              keyword: diet\n            },\n            headers: {\n              'x-rapidapi-host': 'food-calorie-data-search.p.rapidapi.com',\n              'x-rapidapi-key': '24b0b85f90msh137a06c9574e033p1fd6b0jsnff8deec726dc'\n            }\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.request(options));\n\n        case 3:\n          res = _context.sent;\n          dat = res.data[0];\n          console.log(dat);\n          return _context.abrupt(\"return\", dat);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar dietplantracker = function dietplantracker() {\n  var _useState = useState({\n    \"confirmed\": \"--\",\n    \"confirmed_diff\": \"--\",\n    \"deaths\": \"--\",\n    \"region\": {\n      \"province\": \"--\"\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var cpy = _objectSpread({}, data);\n\n  var onSubmit = function onSubmit() {\n    var dta;\n    return _regeneratorRuntime.async(function onSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getdietplantracker(text));\n\n          case 2:\n            dta = _context2.sent;\n\n            if (dta) {\n              setData(dta);\n            } else {\n              setData(cpy);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    label: \"Diet\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    value: text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    onPress: onSubmit,\n    mode: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"ADD\"))), React.createElement(DataTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"aiii work in progress\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"energy_kcal\")), React.createElement(Dietrow, {\n    diet: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default dietplantracker;","map":{"version":3,"sources":["C:/Users/80E502UKIN/Desktop/new one/diettracker/src/components/Dietplantracker.jsx"],"names":["React","useState","Button","TextInput","Text","DataTable","axios","Dietrow","getdietplantracker","diet","options","method","url","params","keyword","headers","request","res","dat","data","console","log","dietplantracker","setData","text","setText","cpy","onSubmit","dta","padding"],"mappings":"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","sourcesContent":["import  React,{useState} from 'react';\r\nimport {Button,TextInput,Text, DataTable } from 'react-native-paper';\r\nimport {View} from 'react-native';\r\nimport axios from \"axios\";\r\nimport Dietrow from './Dietrow';\r\n\r\nconst getdietplantracker = async (diet) => {\r\n\r\n  \r\nconst options = {\r\n  method: 'GET',\r\n  url: 'https://food-calorie-data-search.p.rapidapi.com/api/search',\r\n  params: {keyword: diet},\r\n  headers: {\r\n    'x-rapidapi-host': 'food-calorie-data-search.p.rapidapi.com',\r\n    'x-rapidapi-key': '24b0b85f90msh137a06c9574e033p1fd6b0jsnff8deec726dc'\r\n  }\r\n};\r\n\r\n    const res = await axios.request(options);\r\n  \r\n    const dat = res.data[0]\r\n    console.log(dat)\r\n    return dat\r\n}\r\n\r\n\r\n\r\nconst dietplantracker =   () => {\r\n    const [data,setData] = useState({\"confirmed\":\"--\",\r\n                                    \"confirmed_diff\":\"--\",\r\n                                    \"deaths\":\"--\",\r\n                                    \"region\":{\"province\":\"--\"}})\r\n\r\n    const [text,setText] = useState(\"\")\r\n    const cpy = {...data}\r\n    \r\n    const onSubmit = async () => {\r\n      const dta = await getdietplantracker(text)\r\n      if (dta){ \r\n      setData(dta)}\r\n      else {\r\n        setData(cpy)\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (<View>\r\n    <View style={{padding: 10}}>\r\n    <TextInput\r\n      label = \"Diet\"\r\n      onChangeText={text => setText(text)}\r\n      value={text}\r\n    />\r\n    <Button onPress={onSubmit} mode=\"contained\">\r\n        <Text>ADD</Text>\r\n    </Button>\r\n  </View>\r\n    <DataTable>\r\n      <DataTable.Header>\r\n        <DataTable.Title numeric>aiii work in progress</DataTable.Title>\r\n        <DataTable.Title numeric>energy_kcal</DataTable.Title>\r\n                    \r\n      </DataTable.Header>\r\n      <Dietrow diet = {data}/>\r\n      </DataTable>\r\n      </View>\r\n  );\r\n}\r\n \r\nexport default dietplantracker;"]},"metadata":{},"sourceType":"module"}