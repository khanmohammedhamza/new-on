{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\80E502UKIN\\\\Desktop\\\\mccletgo\\\\Covidapp\\\\src\\\\components\\\\Covid.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, TextInput, Text, DataTable } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from \"axios\";\nimport Staterow from \"./Staterow\";\n\nvar getCovid = function getCovid(state) {\n  var options, res, dat;\n  return _regeneratorRuntime.async(function getCovid$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = {\n            method: 'GET',\n            url: 'https://covid-19-statistics.p.rapidapi.com/reports',\n            params: {\n              iso: 'IND',\n              region_province: state\n            },\n            headers: {\n              'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n            }\n          };\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.request(options));\n\n        case 3:\n          res = _context.sent;\n          dat = res.data.data[0];\n          return _context.abrupt(\"return\", dat);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Covid = function Covid() {\n  var _useState = useState({\n    \"confirmed\": \"--\",\n    \"confirmed_diff\": \"--\",\n    \"deaths\": \"--\",\n    \"region\": {\n      \"province\": \"--\"\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var cpy = _objectSpread({}, data);\n\n  var onSubmit = function onSubmit() {\n    var dta;\n    return _regeneratorRuntime.async(function onSubmit$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getCovid(text));\n\n          case 2:\n            dta = _context2.sent;\n\n            if (dta) {\n              setData(dta);\n            } else {\n              setData(cpy);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    label: \"State\",\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    value: text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), React.createElement(Button, {\n    onPress: onSubmit,\n    mode: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"GET\"))), React.createElement(DataTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, React.createElement(DataTable.Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(DataTable.Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"State\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Confirmed\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"New cases\"), React.createElement(DataTable.Title, {\n    numeric: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Deaths\")), React.createElement(Staterow, {\n    state: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Covid;","map":{"version":3,"sources":["C:/Users/80E502UKIN/Desktop/mccletgo/Covidapp/src/components/Covid.jsx"],"names":["React","useEffect","useState","Button","TextInput","Text","DataTable","axios","Staterow","getCovid","state","options","method","url","params","iso","region_province","headers","request","res","dat","data","Covid","setData","text","setText","cpy","onSubmit","dta","padding"],"mappings":"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","sourcesContent":["import  React,{useEffect, useState} from 'react';\r\nimport {Button,TextInput,Text, DataTable } from 'react-native-paper';\r\nimport {View} from 'react-native';\r\nimport axios from \"axios\";\r\nimport Staterow from './Staterow';\r\n//import {API_KEY} from \"../../kys\"\r\nconst getCovid = async (state) => {\r\n\r\n  const options = {\r\n    method: 'GET',\r\n    url: 'https://covid-19-statistics.p.rapidapi.com/reports',\r\n    params: {iso: 'IND', region_province: state},\r\n    headers: {\r\n      'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com',\r\n      //'x-rapidapi-key': API_KEY\r\n    }\r\n  };\r\n\r\n    const res = await axios.request(options);\r\n    const dat = res.data.data[0]\r\n    return dat\r\n}\r\n\r\n\r\n\r\nconst Covid =   () => {\r\n    const [data,setData] = useState({\"confirmed\":\"--\",\r\n                                    \"confirmed_diff\":\"--\",\r\n                                    \"deaths\":\"--\",\r\n                                    \"region\":{\"province\":\"--\"}})\r\n\r\n    const [text,setText] = useState(\"\")\r\n    const cpy = {...data}\r\n    \r\n    const onSubmit = async () => {\r\n      const dta = await getCovid(text)\r\n      if (dta){ \r\n      setData(dta)}\r\n      else {\r\n        setData(cpy)\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n  return (<View>\r\n    <View style={{padding: 10}}>\r\n    <TextInput\r\n      label = \"State\"\r\n      onChangeText={text => setText(text)}\r\n      value={text}\r\n    />\r\n    <Button onPress={onSubmit} mode=\"contained\">\r\n        <Text>GET</Text>\r\n    </Button>\r\n  </View>\r\n    <DataTable>\r\n      <DataTable.Header>\r\n        <DataTable.Title>State</DataTable.Title>\r\n        <DataTable.Title numeric>Confirmed</DataTable.Title>\r\n        <DataTable.Title numeric>New cases</DataTable.Title>\r\n        <DataTable.Title numeric>Deaths</DataTable.Title>\r\n      </DataTable.Header>\r\n      <Staterow state = {data}/>\r\n      </DataTable>\r\n      </View>\r\n  );\r\n}\r\n\r\nexport default Covid;"]},"metadata":{},"sourceType":"module"}